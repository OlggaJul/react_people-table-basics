{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PeoplePage","useState","loading","setLoading","peopleList","setPeopleList","isError","setIsError","errorText","setErrorText","useEffect","data","length","catch","finally","getParent","parentName","parent","find","person","name","cn","sex","href","map","born","died","motherName","fatherName","hidden","Navbar","to","text","isActive","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9f0eadb3.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { Person } from '../types/Person';\n\ntype Props = {\n\n};\n\nexport const PeoplePage: React.FC<Props> = () => {\n  const [loading, setLoading] = useState(true);\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then(data => {\n        setPeopleList(() => data);\n        if (peopleList.length === 0) {\n          setIsError(true);\n          setErrorText('There are no people on the server');\n        }\n      })\n      .catch(() => {\n        setPeopleList([]);\n        setIsError(true);\n        setErrorText('Something went wrong');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const getParent = (parentName: string | null) => {\n    const parent = peopleList.find(person => person.name === parentName);\n\n    if (!parentName) {\n      return '-';\n    }\n\n    return parent\n      ? (\n        <a\n          className={cn(\n            { 'has-text-danger': parent.sex === 'f' },\n          )}\n          href=\"#/people/emma-de-milliano-1876\"\n        >\n          {parentName}\n        </a>\n      ) : `${parentName}`;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading\n            ? <Loader />\n            : (\n              <>\n                <table\n                  data-cy=\"peopleTable\"\n                  className=\"table is-striped is-hoverable\n                   is-narrow is-fullwidth\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Sex</th>\n                      <th>Born</th>\n                      <th>Died</th>\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {peopleList.map(person => (\n                      <tr data-cy=\"person\">\n                        <td>\n                          <a\n                            href=\"#/people/philibert-haverbeke-1907\"\n                            className={cn(\n                              { 'has-text-danger': person.sex === 'f' },\n                            )}\n                          >\n                            {person.name}\n                          </a>\n                        </td>\n\n                        <td>{person.sex}</td>\n                        <td>{person.born}</td>\n                        <td>{person.died}</td>\n\n                        <td>\n                          {getParent(person.motherName)}\n\n                        </td>\n\n                        <td>\n                          {getParent(person.fatherName)}\n\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <div\n                  data-cy=\"ErrorNotification\"\n                  className={cn(\n                    'notification', 'is-danger',\n                    'is-light', 'has-text-weight-normal',\n                    { hidden: !isError },\n                  )}\n                >\n                  <p\n                    data-cy=\"peopleLoadingError\"\n                    className={cn(\n                      'has-text-danger',\n                      { hidden: !isError },\n                    )}\n                  >\n                    {errorText}\n                  </p>\n                </div>\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const Navbar: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => cn('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Navbar to=\"/\" text=\"Home\" />\n          <Navbar to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n\n          <Route path=\"/people\" element={<PeoplePage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}